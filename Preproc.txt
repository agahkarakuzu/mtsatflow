    antsRegistration -d $params.ants_dim\\ 
        --float 0\\ 
        -o [${sid}_mtw2t1w,${sid}_acq-MTon-to-T1w_MTS.nii.gz]\\ 
        --transform $params.ants_transform\\ 
        --metric $params.ants_metric[$t1w,$mtw,$params.ants_metric_weight,\\
        $params.ants_metric_bins,$params.ants_metric_sampling,$params.ants_metric_samplingprct]\\ 
        --convergence $params.ants_convergence\\ 
        --shrink-factors $params.ants_shrink\\ 
        --smoothing-sigmas $params.ants_smoothing

    antsRegistration -d $params.ants_dim\\ 
        --float 0\\ 
        -o [${sid}_pdw2t1w,${sid}_acq-MToff-to-T1w_MTS.nii.gz]\\ 
        --transform $params.ants_transform\\ 
        --metric $params.ants_metric[$t1w,$pdw,$params.ants_metric_weight,\\
        $params.ants_metric_bins,$params.ants_metric_sampling,$params.ants_metric_samplingprct]\\ 
        --convergence $params.ants_convergence\\ 
        --shrink-factors $params.ants_shrink\\ 
        --smoothing-sigmas $params.ants_smoothing
    
    touch ${sid}_acq-MTon-to-T1w_MTS.nii.gz
    touch ${sid}_acq-MToff-to-T1w_MTS.nii.gz


    if (params.bet_recursive){
        """    
        bet $t1w ${sid}_acq-T1w.nii.gz -m -R -n -f $params.bet_threshold}
        """
    else{
        """    
        bet $t1w ${sid}_acq-T1w.nii.gz -m -n -f $params.bet_threshold}
        """
        }



         if ($docker.enabled || $params.PLATFORM == 'octave'){
               log.info "qMRLab::mt_sat | Octave"
               """

               """
           }else{
               log.info "qMRLab::mt_sat | MATLAB"
               """
               """ 
           }






           process Align_Input_Volumes {

    publishDir = "$root/derivatives/qMRLab/" 

    input:
    set sid, file(pdw), file(mtw), file(t1w) from mtsat_for_alignment

    output:
    set sid, "${sid}_acq-MTon_MTS_aligned.nii.gz", "${sid}_acq-MToff_MTS_aligned.nii.gz"\
    into mtsat_from_alignment
   
    script:
    """
        antsRegistration -d $params.ants_dim\\ 
        --float 0\\ 
        -o [${sid}_mtw2t1w,${sid}_acq-MTon_MTS_aligned.nii.gz]\\ 
        --transform $params.ants_transform\\ 
        --metric $params.ants_metric[$t1w,$mtw,$params.ants_metric_weight,\\
        $params.ants_metric_bins,$params.ants_metric_sampling,$params.ants_metric_samplingprct]\\ 
        --convergence $params.ants_convergence\\ 
        --shrink-factors $params.ants_shrink\\ 
        --smoothing-sigmas $params.ants_smoothing

    antsRegistration -d $params.ants_dim\\ 
        --float 0\\ 
        -o [${sid}_pdw2t1w,${sid}_acq-MToff_MTS_aligned.nii.gz]\\ 
        --transform $params.ants_transform\\ 
        --metric $params.ants_metric[$t1w,$pdw,$params.ants_metric_weight,\\
        $params.ants_metric_bins,$params.ants_metric_sampling,$params.ants_metric_samplingprct]\\ 
        --convergence $params.ants_convergence\\ 
        --shrink-factors $params.ants_shrink\\ 
        --smoothing-sigmas $params.ants_smoothing
    """
}





        if ($docker.enabled || $params.PLATFORM == 'octave'){
               log.info "qMRLab::mt_sat | Octave"
               if (params.bids){
               """
                octave --no-gui --eval "mt_sat_wrapper('${mtw_reg.simpleName}.nii.gz','${pdw_reg.simpleName}.nii.gz','${t1w.simpleName}.nii.gz','${mtw.simpleName}.json','${pdw.simpleName}.json','${t1w.simpleName}.json','mask','$mask','b1map','$b1map','b1factor',$params.COR_B1)"
               """
               } else{
               
               if (params.USE_JSON){
               """
                octave --no-gui --eval "mt_sat_wrapper('${mtw_reg.simpleName}.nii.gz','${pdw_reg.simpleName}.nii.gz','${t1w.simpleName}.nii.gz',[],[],[],'mask','$mask','b1map','$b1map','b1factor',$params.COR_B1,'custom_json','$root/${sid}/mt_sat_prot.json')"
               """
               }else{
               """
                
               """     
               }
               
               }
           }else{
               log.info "qMRLab::mt_sat | MATLAB"
               if (params.bids){
               """
                matlab -nodisplay -nosplash -nodesktop -r "mt_sat_wrapper('${mtw_reg.simpleName}.nii.gz','${pdw_reg.simpleName}.nii.gz','${t1w.simpleName}.nii.gz','${mtw.simpleName}.json','${pdw.simpleName}.json','${t1w.simpleName}.json','mask','$mask','b1map','$b1map','b1factor',$params.COR_B1)"
               """
               } else{
               """

               """
               }
           }